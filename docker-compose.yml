version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: diagramflow_postgres
    environment:
      POSTGRES_DB: diagramming_tool
      POSTGRES_USER: diagramflow_user
      POSTGRES_PASSWORD: diagramflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - diagramflow_network
    restart: unless-stopped

  # Redis for WebSocket message queuing
  redis:
    image: redis:7-alpine
    container_name: diagramflow_redis
    ports:
      - "6379:6379"
    networks:
      - diagramflow_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: diagramflow_backend
    environment:
      - DATABASE_URL=postgresql://diagramflow_user:diagramflow_password@postgres:5432/diagramming_tool
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - diagramflow_network
    restart: unless-stopped
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: diagramflow_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - diagramflow_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  diagramflow_network:
    driver: bridge
